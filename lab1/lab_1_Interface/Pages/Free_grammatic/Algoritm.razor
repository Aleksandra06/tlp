@using lab_1_Interface.Models

<h3>Выполнение</h3>

@* G = ({a, b, c}, {A, B, C}, P, A) *@
@* Необходимо разработать ввод данных
    Терминальный алфавит
    Нетерминальный алфавит
    Правила
    Начальный нетерминальный символ*@

<style>
    .name_r, .input_vn_r {
        width: 40px;
        text-align: center;
    }

    .reg {
        width: 100px;
        text-align: center;
    }
</style>

<div>
    <label class="pr-2" style="width: 110px">Терминалы</label>
    <input type="text" id="input_vt" placeholder="Введите символы через запятую" style="width: 270px" @bind=input_vt_text />
    <button @onclick="inputVT" class="btn btn-primary">Записать</button>
</div>
<br>
<div>
    <label class="pr-2" style="width: 110px">Нетерминалы</label>
    <input type="text" id="input_vn" placeholder="Введите символы через запятую" style="width: 270px" @bind=input_vn_text />
    <button @onclick="inputVN" class="btn btn-primary">Записать</button>
</div>

<label>Терминальный список</label>
<ul>
    @foreach (string list in grammatic.VT) {
        <li>
            @list
        </li>
    }
</ul>

<label>Нетерминальный список</label>
<ul>
    @foreach (string list in grammatic.VN) {
        <li>
            @list
        </li>
    }
</ul>

@*<div>
    <label class="pr-2" style="float: left;">Начальный нетерминал</label>
    <form style="margin-left: 10px; float: left; ">
        <input list="nt" @bind-value=newRegularLeft style="width: 185px;" placeholder="Выберите элемент">
        <datalist id="nt">
            @foreach (string list in grammatic.VN) {
                <option>
                    @list
                </option>
            }
        </datalist>
    </form>
    <span class="pr-2" style="margin-left: 10px;"> [ </span>
    <label class="pr-2">@grammatic.Regulation[0].left </label>
    <span class="pr-2"> ] </span>
    <button class="btn btn-primary" @onclick="onClickNewLeft">Записать</button>
</div>
<br>*@

<h3>Всего правил: (@grammatic.Regulation.Count)</h3>

<ul>
    @foreach (var regular in grammatic.Regulation) {
    <li>
        <form>
            <input list="swap" @bind-value="regular.left" style="width: 50px;" placeholder="Выберите элемент">
            <datalist id="swap">
                @foreach (string list in grammatic.VN) {
                    <option>
                        @list
                    </option>
                }
            </datalist>
        </form>
    </li>
    }
</ul>

<form>
    <input list="regular" @bind-value=newRegularLeft style="width: 185px;" placeholder="Выберите элемент">
    <datalist id="regular">
        @foreach (string list in grammatic.VN) {
            <option>
                @list
            </option>
        }
    </datalist>
</form>

<button class="btn btn-primary" @onclick="onClickNewLeft">Записать</button>


@code {
    Grammatic grammatic = new Grammatic();

    string input_vt_text, input_vn_text;
    string[] split_vt_text, split_vn_text;

    string newRegularLeft;

    protected override void OnInitialized()
    {
        grammatic.VT = new List<string>();
        grammatic.VN = new List<string>();
        grammatic.Regulation = new List<Regular>();

    }

    void onClickNewLeft()
    {
        if (!string.IsNullOrWhiteSpace(newRegularLeft)) {
            grammatic.Regulation.Add(new Regular() { left = newRegularLeft });
            newRegularLeft = string.Empty;
        }
    }

    void inputVT()
    {
        if (!string.IsNullOrWhiteSpace(input_vt_text)) {
            split_vt_text = input_vt_text.Split(",");
            grammatic.VT = new List<string>();
            foreach (string list in split_vt_text) {
                grammatic.VT.Add(list);
            }
        }
    }

    void inputVN()
    {
        if (!string.IsNullOrWhiteSpace(input_vn_text)) {
            split_vn_text = input_vn_text.Split(",");
            grammatic.VN = new List<string>();
            foreach (string list in split_vn_text) {
                grammatic.VN.Add(list);
            }
        }
    }



}
